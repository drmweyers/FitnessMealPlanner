services:
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=fitmeal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    profiles:
      - dev
      - prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fitmeal"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: fitnessmealplanner-prod
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/fitmeal
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - prod

  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: fitnessmealplanner-dev
    ports:
      - "5000:5000"
      - "24678:24678"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/fitmeal
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "npm run db:push && npm run build:client && npm run dev"
    profiles:
      - dev

volumes:
  postgres_data:
